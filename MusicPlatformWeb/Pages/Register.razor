@page "/register"
@inject Orchestrator _orchestrator
@inject NavigationManager _nav
<PageTitle>register</PageTitle>

 

<div class="register-page-container">
    <div class="register-card">
        <h3>Register</h3>

        <EditForm Model="@userViewModel" OnValidSubmit="HandleFormSubmission">
            <DataAnnotationsValidator />

            <div class="validation-summary">
                <ValidationSummary />
            </div>

            <div class="form-group">
                <label for="Username">Username: </label>
                <InputText id="Username" @bind-Value="userViewModel.Username" class="form-control" />
            </div>

            <div class="form-group">
                <label for="Email">Email: </label>
                <InputText id="Email" @bind-Value="userViewModel.Email" class="form-control" />
            </div>

            <div class="form-group">
                <label for="Password">Password:</label>
                <InputText type="password" id="Password" @bind-Value="userViewModel.Password" class="form-control" />
            </div>

            <div class="form-group">
                <label for="Birthday">Birthday: </label>
                <InputDate id="Birthday" @bind-Value="userViewModel.Birthday" class="form-control" />
            </div>

            <button type="submit" class="submit-button">Register</button>
        </EditForm>

        <div class="navigation-links">
            <NavLink href="/login">Already have an account?</NavLink>
            <span>|</span>
            <NavLink href="/">Back to Home</NavLink>
        </div>
    </div>
</div>


@code {
    RegistrationUserViewModel userViewModel = new();
    string submission = null;
    User? newUser;

    protected override void OnInitialized()
    {

    }

    public void HandleFormSubmission()
    {
        if (userViewModel.Birthday == null)
        {
            newUser = new User(userViewModel.Password, userViewModel.Email, userViewModel.Password);
            _orchestrator.registerUser(newUser);
        }
        else
        {
            newUser = new User(userViewModel.Username, userViewModel.Email, userViewModel.Password,
                userViewModel.Birthday);
            _orchestrator.registerUser(newUser);

        }
        _nav.NavigateTo("/playlists");
    }
}